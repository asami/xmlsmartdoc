package org.relaxer.framework.testScript.rTestScript;

/**
 * DefaultTestScriptFactory is generated by Relaxer based on testScript.rng.
 *
 * @version testScript.rng 1.0 (Mon Sep 29 12:19:25 JST 2003)
 * @author  Relaxer 1.0b (http://www.relaxer.org)
 */
public class DefaultTestScriptFactory extends AbstractTestScriptFactory {

    /**
     * Creates a default <code>TSTestcase</code>.
     * This method is a hook method of the AbstractTestScriptFactory.
     *
     * @return TSTestcase
     */
    public TSTestcase createTSTestcase() {
        return (new TSTestcase());
    }

    /**
     * Creates a default <code>TSTest</code>.
     * This method is a hook method of the AbstractTestScriptFactory.
     *
     * @return TSTest
     */
    public TSTest createTSTest() {
        return (new TSTest());
    }

    /**
     * Creates a default <code>TSBody</code>.
     * This method is a hook method of the AbstractTestScriptFactory.
     *
     * @return TSBody
     */
    public TSBody createTSBody() {
        return (new TSBody());
    }

    /**
     * Creates a default <code>TSInvokeObject</code>.
     * This method is a hook method of the AbstractTestScriptFactory.
     *
     * @return TSInvokeObject
     */
    public TSInvokeObject createTSInvokeObject() {
        return (new TSInvokeObject());
    }

    /**
     * Creates a default <code>TSIn</code>.
     * This method is a hook method of the AbstractTestScriptFactory.
     *
     * @return TSIn
     */
    public TSIn createTSIn() {
        return (new TSIn());
    }

    /**
     * Creates a default <code>TSValueElement</code>.
     * This method is a hook method of the AbstractTestScriptFactory.
     *
     * @return TSValueElement
     */
    public TSValueElement createTSValueElement() {
        return (new TSValueElement());
    }

    /**
     * Creates a default <code>TSAny</code>.
     * This method is a hook method of the AbstractTestScriptFactory.
     *
     * @return TSAny
     */
    public TSAny createTSAny() {
        return (new TSAny());
    }

    /**
     * Creates a default <code>TSInvokeService</code>.
     * This method is a hook method of the AbstractTestScriptFactory.
     *
     * @return TSInvokeService
     */
    public TSInvokeService createTSInvokeService() {
        return (new TSInvokeService());
    }

    /**
     * Creates a default <code>TSAssert</code>.
     * This method is a hook method of the AbstractTestScriptFactory.
     *
     * @return TSAssert
     */
    public TSAssert createTSAssert() {
        return (new TSAssert());
    }

    /**
     * Creates a default <code>TSAssertReturn</code>.
     * This method is a hook method of the AbstractTestScriptFactory.
     *
     * @return TSAssertReturn
     */
    public TSAssertReturn createTSAssertReturn() {
        return (new TSAssertReturn());
    }

    /**
     * Creates a default <code>TSAssertException</code>.
     * This method is a hook method of the AbstractTestScriptFactory.
     *
     * @return TSAssertException
     */
    public TSAssertException createTSAssertException() {
        return (new TSAssertException());
    }

    /**
     * Creates a default <code>TSExpression</code>.
     * This method is a hook method of the AbstractTestScriptFactory.
     *
     * @return TSExpression
     */
    public TSExpression createTSExpression() {
        return (new TSExpression());
    }

    /**
     * Creates a default <code>TSValueExpressionValue</code>.
     * This method is a hook method of the AbstractTestScriptFactory.
     *
     * @return TSValueExpressionValue
     */
    public TSValueExpressionValue createTSValueExpressionValue() {
        return (new TSValueExpressionValue());
    }

    /**
     * Creates a default <code>TSValueElementAnyAttr</code>.
     * This method is a hook method of the AbstractTestScriptFactory.
     *
     * @return TSValueElementAnyAttr
     */
    public TSValueElementAnyAttr createTSValueElementAnyAttr() {
        return (new TSValueElementAnyAttr());
    }

    /**
     * Creates a default <code>TSAnyAnyAttr</code>.
     * This method is a hook method of the AbstractTestScriptFactory.
     *
     * @return TSAnyAnyAttr
     */
    public TSAnyAnyAttr createTSAnyAnyAttr() {
        return (new TSAnyAnyAttr());
    }
}
